// <auto-generated />
using System;
using EmployeeSkillsAPI.Data.ESM_Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmployeeSkillsAPI.Data.Migrations
{
    [DbContext(typeof(EmployeeSkillsMigrationContext))]
    [Migration("20210726195626_MigrationsToOP_SQL")]
    partial class MigrationsToOP_SQL
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:CharSet", "utf8mb4")
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Certification", b =>
                {
                    b.Property<int>("CertificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("skillId")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'y'");

                    b.HasKey("CertificationId");

                    b.HasIndex(new[] { "SkillId" }, "fk_skillid_idx");

                    b.ToTable("bi_raw_engineering_skills.Certification");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Empcertification", b =>
                {
                    b.Property<int>("EmpCertificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("empCertificationId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CertValidity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("cert_Validity")
                        .HasDefaultValueSql("'2021-01-01'")
                        .HasComment("Valid Till");

                    b.Property<int?>("Certificationid")
                        .HasColumnType("int")
                        .HasColumnName("certificationid");

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("datetime")
                        .HasColumnName("dateCreation")
                        .HasComment("record entry date");

                    b.Property<int?>("Empid")
                        .HasColumnType("int")
                        .HasColumnName("empid");

                    b.Property<string>("Other")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("EmpCertificationId");

                    b.HasIndex(new[] { "Certificationid" }, "fk_certid_idx");

                    b.HasIndex(new[] { "Empid" }, "fk_empid_idx");

                    b.ToTable("bi_raw_engineering_skills.EmployeeCertification");

                    b
                        .HasComment("		");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Empdata", b =>
                {
                    b.Property<int>("Empid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("empid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CareerStartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("datetime")
                        .HasColumnName("dateCreation");

                    b.Property<string>("EmpEmail")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("empEmail");

                    b.Property<long>("EmpEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("empEmployeeId");

                    b.Property<string>("EmpUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("empUserName");

                    b.Property<string>("Password")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("roleId");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("serviceId");

                    b.Property<string>("UniqueCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Empid")
                        .HasName("PRIMARY_Empid");

                    b.HasIndex(new[] { "EmpUserName" }, "empUserName_UNIQUE")
                        .IsUnique();

                    b.HasIndex(new[] { "ServiceId" }, "serviceid_fk_idx");

                    b.ToTable("bi_raw_engineering_skills.EmployeeData");

                    b
                        .HasComment("contains employee data	");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Empfunction", b =>
                {
                    b.Property<int>("EmpFunctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("empFunctionId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("datetime");

                    b.Property<int?>("Empid")
                        .HasColumnType("int")
                        .HasColumnName("empid");

                    b.Property<int?>("Funcid")
                        .HasColumnType("int")
                        .HasColumnName("funcid");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("isActive")
                        .HasDefaultValueSql("'y'");

                    b.HasKey("EmpFunctionId");

                    b.HasIndex(new[] { "Empid" }, "emp_function_FK_idx");

                    b.HasIndex(new[] { "Funcid" }, "funtions_FK_idx");

                    b.ToTable("bi_raw_engineering_skills.EmployeeFunction");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Empskill", b =>
                {
                    b.Property<int>("EmpSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("empSkillID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Empid")
                        .HasColumnType("int")
                        .HasColumnName("empid");

                    b.Property<short?>("Rating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("rating")
                        .HasDefaultValueSql("'1'");

                    b.Property<int?>("Skillid")
                        .HasColumnType("int")
                        .HasColumnName("skillid");

                    b.Property<int?>("Skilltypeid")
                        .HasColumnType("int")
                        .HasColumnName("skilltypeid");

                    b.HasKey("EmpSkillId");

                    b.HasIndex(new[] { "Empid" }, "empidFK_idx");

                    b.HasIndex(new[] { "Skillid" }, "ix_skillid");

                    b.HasIndex(new[] { "Skilltypeid" }, "sktypeidfk_idx");

                    b.ToTable("bi_raw_engineering_skills.EmployeeSkill");

                    b
                        .HasComment("				");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Function", b =>
                {
                    b.Property<int>("FuncId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("datetime");

                    b.Property<string>("FuncDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FuncName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IsActive")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("isActive");

                    b.HasKey("FuncId")
                        .HasName("PRIMARY_FuncId");

                    b.ToTable("bi_raw_engineering_skills.Functions");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ServiceName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ServiceId");

                    b.ToTable("bi_raw_engineering_skills.Service");

                    b
                        .HasComment("Afiniti defined Services");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("description");

                    b.Property<string>("OtherSkill")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("otherSkill");

                    b.Property<string>("Skillname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("skillname");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValueSql("'y'");

                    b.HasKey("SkillId");

                    b.HasIndex(new[] { "Skillname" }, "skillname_UNIQUE")
                        .IsUnique();

                    b.ToTable("bi_raw_engineering_skills.Skill");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Skillmapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SkillId")
                        .HasColumnType("int")
                        .HasColumnName("skillId");

                    b.Property<int?>("SkilltypeId")
                        .HasColumnType("int")
                        .HasColumnName("skilltypeId");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "SkillId" }, "FK_skillid_idx");

                    b.HasIndex(new[] { "SkilltypeId" }, "fk_skilltypeID_idx");

                    b.ToTable("bi_raw_engineering_skills.SkillMapping");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Skilltype", b =>
                {
                    b.Property<int>("SkillTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SkillTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SkillTypeId");

                    b.ToTable("bi_raw_engineering_skills.SkillType");

                    b
                        .HasComment(" ");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Stfunction", b =>
                {
                    b.Property<int>("StFuncId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("stFuncId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("datetime");

                    b.Property<int?>("FuncId")
                        .HasColumnType("int")
                        .HasColumnName("funcId");

                    b.Property<string>("IsActive")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("isActive");

                    b.Property<int?>("SkilltypeId")
                        .HasColumnType("int")
                        .HasColumnName("skilltypeId");

                    b.HasKey("StFuncId")
                        .HasName("PRIMARY_StFuncId");

                    b.HasIndex(new[] { "FuncId" }, "function_st_FK_idx");

                    b.HasIndex(new[] { "SkilltypeId" }, "skilltype-st_FK_idx");

                    b.ToTable("bi_raw_engineering_skills.SkillTypeFunction");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Certification", b =>
                {
                    b.HasOne("EmployeeSkillsAPI.Data.ESM_Entities.Skill", "Skill")
                        .WithMany("Certifications")
                        .HasForeignKey("SkillId")
                        .HasConstraintName("fk_skillid");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Empcertification", b =>
                {
                    b.HasOne("EmployeeSkillsAPI.Data.ESM_Entities.Certification", "Certification")
                        .WithMany("Empcertifications")
                        .HasForeignKey("Certificationid")
                        .HasConstraintName("fk_certid");

                    b.HasOne("EmployeeSkillsAPI.Data.ESM_Entities.Empdata", "Emp")
                        .WithMany("Empcertifications")
                        .HasForeignKey("Empid")
                        .HasConstraintName("fk_empid");

                    b.Navigation("Certification");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Empdata", b =>
                {
                    b.HasOne("EmployeeSkillsAPI.Data.ESM_Entities.Service", "Service")
                        .WithMany("Empdata")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("serviceid_fk");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Empfunction", b =>
                {
                    b.HasOne("EmployeeSkillsAPI.Data.ESM_Entities.Empdata", "Emp")
                        .WithMany("Empfunctions")
                        .HasForeignKey("Empid")
                        .HasConstraintName("emp_function_FK");

                    b.HasOne("EmployeeSkillsAPI.Data.ESM_Entities.Function", "Func")
                        .WithMany("Empfunctions")
                        .HasForeignKey("Funcid")
                        .HasConstraintName("funtions_FK");

                    b.Navigation("Emp");

                    b.Navigation("Func");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Empskill", b =>
                {
                    b.HasOne("EmployeeSkillsAPI.Data.ESM_Entities.Empdata", "Emp")
                        .WithMany("Empskills")
                        .HasForeignKey("Empid")
                        .HasConstraintName("empidFK");

                    b.HasOne("EmployeeSkillsAPI.Data.ESM_Entities.Skill", "Skill")
                        .WithMany("Empskills")
                        .HasForeignKey("Skillid")
                        .HasConstraintName("skillidfk");

                    b.HasOne("EmployeeSkillsAPI.Data.ESM_Entities.Skilltype", "Skilltype")
                        .WithMany("Empskills")
                        .HasForeignKey("Skilltypeid")
                        .HasConstraintName("sktypeidfk");

                    b.Navigation("Emp");

                    b.Navigation("Skill");

                    b.Navigation("Skilltype");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Skillmapping", b =>
                {
                    b.HasOne("EmployeeSkillsAPI.Data.ESM_Entities.Skill", "Skill")
                        .WithMany("Skillmappings")
                        .HasForeignKey("SkillId")
                        .HasConstraintName("FK_skillid_mapping");

                    b.HasOne("EmployeeSkillsAPI.Data.ESM_Entities.Skilltype", "Skilltype")
                        .WithMany("Skillmappings")
                        .HasForeignKey("SkilltypeId")
                        .HasConstraintName("fk_skilltypeID_mapping");

                    b.Navigation("Skill");

                    b.Navigation("Skilltype");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Stfunction", b =>
                {
                    b.HasOne("EmployeeSkillsAPI.Data.ESM_Entities.Function", "Func")
                        .WithMany("Stfunctions")
                        .HasForeignKey("FuncId")
                        .HasConstraintName("function_st_FK");

                    b.HasOne("EmployeeSkillsAPI.Data.ESM_Entities.Skilltype", "Skilltype")
                        .WithMany("Stfunctions")
                        .HasForeignKey("SkilltypeId")
                        .HasConstraintName("skilltype-st_FK");

                    b.Navigation("Func");

                    b.Navigation("Skilltype");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Certification", b =>
                {
                    b.Navigation("Empcertifications");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Empdata", b =>
                {
                    b.Navigation("Empcertifications");

                    b.Navigation("Empfunctions");

                    b.Navigation("Empskills");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Function", b =>
                {
                    b.Navigation("Empfunctions");

                    b.Navigation("Stfunctions");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Service", b =>
                {
                    b.Navigation("Empdata");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Skill", b =>
                {
                    b.Navigation("Certifications");

                    b.Navigation("Empskills");

                    b.Navigation("Skillmappings");
                });

            modelBuilder.Entity("EmployeeSkillsAPI.Data.ESM_Entities.Skilltype", b =>
                {
                    b.Navigation("Empskills");

                    b.Navigation("Skillmappings");

                    b.Navigation("Stfunctions");
                });
#pragma warning restore 612, 618
        }
    }
}
